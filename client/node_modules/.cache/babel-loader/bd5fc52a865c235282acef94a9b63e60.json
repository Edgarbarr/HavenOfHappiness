{"ast":null,"code":"var _jsxFileName = \"/Users/edgarbarrientos/ecommerce/ecommerce/src/components/sign-up/sign-up.component.jsx\";\nimport React, { Component } from 'react';\nimport './sign-up.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { connect } from 'redux';\nimport '../../';\n\nclass SignUp extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault(); // const {displayName, email, password, confirmPassword} = this.state;\n      // if(password !== confirmPassword) {\n      //     alert(\"passwords don't match\")\n      //     return;\n      // }\n      // try {\n      //     const { user } = await auth.createUserWithEmailAndPassword(email, password);\n      //     await createUserProfileDocument(user, {displayName});\n      //     this.setState({\n      //         displayName: '',\n      //         email: '',\n      //         password: '',\n      //         confirmPassword: ''\n      //     })\n      // } catch(error) {\n      //     console.error(error);\n      // }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"display name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"confirm password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: dispatch()\n});\n\nexport default connect()(SignUp);","map":{"version":3,"sources":["/Users/edgarbarrientos/ecommerce/ecommerce/src/components/sign-up/sign-up.component.jsx"],"names":["React","Component","FormInput","CustomButton","auth","createUserProfileDocument","connect","SignUp","constructor","handleSubmit","event","preventDefault","handleChange","name","value","target","setState","state","displayName","email","password","confirmPassword","render","mapDispatchToProps","dispatch","signUpStart"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport './sign-up.styles.scss';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { connect } from 'redux';\nimport {} from '../../'\n\nclass SignUp extends Component {\n    constructor(){\n        super();\n\n        this.state = {\n            displayName: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        }\n    }\n    handleSubmit = async event => {\n        event.preventDefault();\n        // const {displayName, email, password, confirmPassword} = this.state;\n\n\n        // if(password !== confirmPassword) {\n        //     alert(\"passwords don't match\")\n        //     return;\n        // }\n        // try {\n        //     const { user } = await auth.createUserWithEmailAndPassword(email, password);\n        //     await createUserProfileDocument(user, {displayName});\n\n        //     this.setState({\n        //         displayName: '',\n        //         email: '',\n        //         password: '',\n        //         confirmPassword: ''\n        //     })\n\n        // } catch(error) {\n        //     console.error(error);\n        // }\n\n    }\n\n    handleChange = event => {\n        const {name, value} = event.target;\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    render(){\n        const {displayName, email, password, confirmPassword} = this.state;\n        return (\n            <div className='sign-up'>\n                <h2>I do not have an account</h2>\n                <span>Sign up with your email and password</span>\n                <form className='sign-up-form' onSubmit={this.handleSubmit}>\n                    <FormInput\n                        type='text'\n                        name='displayName'\n                        value={displayName}\n                        onChange={this.handleChange}\n                        label=\"display name\"\n                    > \n                    </FormInput>\n                    <FormInput\n                        type='email'\n                        name='email'\n                        value={email}\n                        onChange={this.handleChange}\n                        label='email'\n                    >\n                    </FormInput>\n                    <FormInput\n                        type='password'\n                        name='password'\n                        value={password}\n                        onChange={this.handleChange}\n                        label='password'\n                    >\n                    </FormInput>\n                    <FormInput\n                        type='password'\n                        name='confirmPassword'\n                        value={confirmPassword}\n                        onChange={this.handleChange}\n                        label='confirm password'\n                    >\n                    </FormInput>\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: dispatch()\n})\nexport default connect()(SignUp);"]},"metadata":{},"sourceType":"module"}