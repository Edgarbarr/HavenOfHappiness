{"ast":null,"code":"import{createSelector}from\"reselect\";import{selectCartItems}from\"../cart/cart.selectors\";var selectShop=function selectShop(state){return state.shop;};export var selectCollections=createSelector([selectShop],function(shop){return shop.collections;});export var selectCollection=function selectCollection(collectionUrlParam){return createSelector([selectCollections],function(collections){return collections?collections[collectionUrlParam]:null;});};export var selectCollectionsForPreview=createSelector([selectCollections],function(collections){return collections?Object.keys(collections).map(function(key){return collections[key];}):[];});export var selectCollectionItemsForPreview=function selectCollectionItemsForPreview(collectionUrlParam){return createSelector([selectCollections],function(collections){return collections?Object.keys(collections[collectionUrlParam].items).map(function(key){return collections[collectionUrlParam].items[key];}):[];});};export var selectItem=function selectItem(collectionUrlParam,itemUrlParam){return createSelector([selectCollections],function(collections){return collections[collectionUrlParam].items[itemUrlParam];});};export var selectIsCollectionFetching=createSelector([selectShop],function(shop){return shop.isFetching;});export var selectIsCollectionsLoaded=createSelector([selectShop],function(shop){return!!shop.collections;});","map":{"version":3,"sources":["/Users/edgarbarrientos/ecommerce/ecommerce/client/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectCartItems","selectShop","state","shop","selectCollections","collections","selectCollection","collectionUrlParam","selectCollectionsForPreview","Object","keys","map","key","selectCollectionItemsForPreview","items","selectItem","itemUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,OAASA,cAAT,KAA+B,UAA/B,CACA,OAASC,eAAT,KAAgC,wBAAhC,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAjB,EAAnB,CAEA,MAAO,IAAMC,CAAAA,iBAAiB,CAAGL,cAAc,CAC7C,CAACE,UAAD,CAD6C,CAE7C,SAACE,IAAD,QAAUA,CAAAA,IAAI,CAACE,WAAf,EAF6C,CAAxC,CAKP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,kBAAD,QAC9BR,CAAAA,cAAc,CAAC,CAACK,iBAAD,CAAD,CAAsB,SAACC,WAAD,QAAkBA,CAAAA,WAAW,CAAGA,WAAW,CAACE,kBAAD,CAAd,CAAqC,IAAlE,EAAtB,CADgB,EAAzB,CAGP,MAAO,IAAMC,CAAAA,2BAA2B,CAAGT,cAAc,CACvD,CAACK,iBAAD,CADuD,CAEvD,SAACC,WAAD,QAAiBA,CAAAA,WAAW,CAAGI,MAAM,CAACC,IAAP,CAAYL,WAAZ,EAAyBM,GAAzB,CAA6B,SAAAC,GAAG,QAAIP,CAAAA,WAAW,CAACO,GAAD,CAAf,EAAhC,CAAH,CAA2D,EAAvF,EAFuD,CAAlD,CAKP,MAAO,IAAMC,CAAAA,+BAA+B,CAAG,QAAlCA,CAAAA,+BAAkC,CAACN,kBAAD,QAC7CR,CAAAA,cAAc,CAAC,CAACK,iBAAD,CAAD,CAAsB,SAACC,WAAD,QAAiBA,CAAAA,WAAW,CAAGI,MAAM,CAACC,IAAP,CAAYL,WAAW,CAACE,kBAAD,CAAX,CAAgCO,KAA5C,EAAmDH,GAAnD,CAAuD,SAAAC,GAAG,QAAIP,CAAAA,WAAW,CAACE,kBAAD,CAAX,CAAgCO,KAAhC,CAAsCF,GAAtC,CAAJ,EAA1D,CAAH,CAA+G,EAA3I,EAAtB,CAD+B,EAAxC,CAIP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACR,kBAAD,CAAqBS,YAArB,QAAsCjB,CAAAA,cAAc,CAC5E,CAACK,iBAAD,CAD4E,CAE5E,SAACC,WAAD,QAAiBA,CAAAA,WAAW,CAACE,kBAAD,CAAX,CAAgCO,KAAhC,CAAsCE,YAAtC,CAAjB,EAF4E,CAApD,EAAnB,CAKP,MAAO,IAAMC,CAAAA,0BAA0B,CAAGlB,cAAc,CACtD,CAACE,UAAD,CADsD,CAEtD,SAAAE,IAAI,QAAIA,CAAAA,IAAI,CAACe,UAAT,EAFkD,CAAjD,CAIP,MAAO,IAAMC,CAAAA,yBAAyB,CAAGpB,cAAc,CACrD,CAACE,UAAD,CADqD,CAErD,SAAAE,IAAI,QAAI,CAAC,CAACA,IAAI,CAACE,WAAX,EAFiD,CAAhD","sourcesContent":["import { createSelector } from \"reselect\";\nimport { selectCartItems } from \"../cart/cart.selectors\";\n\nconst selectShop = (state) => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  (shop) => shop.collections\n);\n\nexport const selectCollection = (collectionUrlParam) =>\n  createSelector([selectCollections], (collections)  => collections ? collections[collectionUrlParam] : null);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  (collections) => collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollectionItemsForPreview = (collectionUrlParam) =>\n  createSelector([selectCollections], (collections) => collections ? Object.keys(collections[collectionUrlParam].items).map(key => collections[collectionUrlParam].items[key]) : []);\n\n\nexport const selectItem = (collectionUrlParam, itemUrlParam) => createSelector(\n  [selectCollections],\n  (collections) => collections[collectionUrlParam].items[itemUrlParam]\n)\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n)\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  shop => !!shop.collections\n)"]},"metadata":{},"sourceType":"module"}