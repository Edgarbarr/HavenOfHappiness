{"ast":null,"code":"import { takeLatest, all, call, put } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from \"./user.actions\";\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return null;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_IN_SUCCESS, sign);\n}\nexport function* onSignUpStart(userCredentials) {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp(userCredentials));\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/edgarbarrientos/ecommerce/ecommerce/src/redux/user/users.sagas.js"],"names":["takeLatest","all","call","put","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","googleProvider","auth","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","signOut","onSignOutStart","SIGN_OUT_START","signUp","displayName","createUserWithEmailAndPassword","additionalData","onSignUpSuccess","SIGN_IN_SUCCESS","sign","onSignUpStart","userCredentials","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, all, call, put } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from \"./user.actions\";\nimport {\n  googleProvider,\n  auth,\n  createUserProfileDocument,\n  getCurrentUser\n} from \"../../firebase/firebase.utils\";\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return null;\n        yield getSnapshotFromUserAuth(userAuth);\n    } catch(error){\n        yield put(signInFailure(error))\n    }\n}\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\nexport function* signOut() {\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    }catch(error) {\n        yield put(signOutFailure(error))\n    }\n}\nexport function* onSignOutStart(){\nyield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\nexport function* signUp({payload: {email, password, displayName}}){\n    try{\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n        yield put(signUpSuccess({user, additionalData: { displayName }}))\n    }catch(error){\n        yield put(signInFailure(error))\n    }\n}\nexport function* onSignUpSuccess(){\n    yield takeLatest(UserActionTypes.SIGN_IN_SUCCESS, sign)\n}\nexport function* onSignUpStart(userCredentials){\n    yield takeLatest(UserActionTypes.SIGN_UP_START,signUp(userCredentials))\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}"]},"metadata":{},"sourceType":"module"}