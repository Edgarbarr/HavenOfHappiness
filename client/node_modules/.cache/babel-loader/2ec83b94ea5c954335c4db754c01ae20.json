{"ast":null,"code":"import _regeneratorRuntime from\"/Users/edgarbarrientos/ecommerce/ecommerce/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/edgarbarrientos/ecommerce/ecommerce/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/edgarbarrientos/ecommerce/ecommerce/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from\"firebase/app\";import\"firebase/firestore\";import\"firebase/auth\";var config={apiKey:\"AIzaSyBvqdoCKW5XL4e4r9cK9IV01B_W4tdAxAY\",authDomain:\"hoh-db.firebaseapp.com\",databaseURL:\"https://hoh-db.firebaseio.com\",projectId:\"hoh-db\",storageBucket:\"hoh-db.appspot.com\",messagingSenderId:\"604739400659\",appId:\"1:604739400659:web:b04c60a6ff7223e501b526\",measurementId:\"G-YD3RVBVPJT\"};export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapShop,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));// const collectionRef = firestore.collection('users');\n_context.next=5;return userRef.get();case 5:snapShop=_context.sent;if(snapShop.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log('error creating user',_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();export var addCollectionAndDocuments=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionKey,objectsToAdd){var collectionRef,batch;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:collectionRef=firestore.collection(collectionKey);batch=firestore.batch();objectsToAdd.forEach(function(obj){var newDocRef=collectionRef.doc();batch.set(newDocRef,obj);});_context2.next=5;return batch.commit();case 5:return _context2.abrupt(\"return\",_context2.sent);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function addCollectionAndDocuments(_x3,_x4){return _ref2.apply(this,arguments);};}();export var convertCollectionsSnapshotToMap=function convertCollectionsSnapshotToMap(collections){var transformedCollection=collections.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routeName:encodeURI(title.toLowerCase()),id:doc.id,title:title,items:items};});return transformedCollection.reduce(function(accumulator,collection){accumulator[collection.title.toLowerCase()]=collection;return accumulator;},{});};firebase.initializeApp(config);export var getCurrentUser=function getCurrentUser(){return new Promise(function(resolve,reject){var unsubscribe=auth.onAuthStateChanged(function(userAuth){unsubscribe();resolve(userAuth);},reject);});};export var auth=firebase.auth();export var firestore=firebase.firestore();export var googleProvider=new firebase.auth.GoogleAuthProvider();googleProvider.setCustomParameters({prompt:\"select_account\"});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(googleProvider);};export default firebase;","map":{"version":3,"sources":["/Users/edgarbarrientos/ecommerce/ecommerce/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShop","exists","displayName","email","createdAt","Date","set","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","initializeApp","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyBvqdoCKW5XL4e4r9cK9IV01B_W4tdAxAY\",\n  authDomain: \"hoh-db.firebaseapp.com\",\n  databaseURL: \"https://hoh-db.firebaseio.com\",\n  projectId: \"hoh-db\",\n  storageBucket: \"hoh-db.appspot.com\",\n  messagingSenderId: \"604739400659\",\n  appId: \"1:604739400659:web:b04c60a6ff7223e501b526\",\n  measurementId: \"G-YD3RVBVPJT\",\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if(!userAuth) return;\n    \n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    // const collectionRef = firestore.collection('users');\n    const snapShop = await userRef.get();\n    // const collectionSnapshot = await collectionRef.get();\n    // console.log({collection: collectionSnapshot.docs.map(doc => doc.data())})\n\n    if(!snapShop.exists) {\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        } catch(error) {\n            console.log('error creating user',error.message)\n        }\n    }\n\n    return userRef;\n};\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n\n    const batch = firestore.batch();\n    objectsToAdd.forEach(obj => {\n        const newDocRef = collectionRef.doc();\n        batch.set(newDocRef, obj);\n    });\n\n    return await batch.commit();\n} \nexport const convertCollectionsSnapshotToMap = (collections) => {\n    const transformedCollection = collections.docs.map(doc => {\n        const { title, items } = doc.data();\n\n        return {\n            routeName: encodeURI(title.toLowerCase()),\n            id: doc.id,\n            title,\n            items\n        }\n    })\n    return transformedCollection.reduce((accumulator, collection) => {\n        accumulator[collection.title.toLowerCase()] = collection;\n        return accumulator;\n    }, {});\n}\nfirebase.initializeApp(config);\n\nexport const getCurrentUser = () => {\n    return new Promise((resolve, reject) => {\n        const unsubscribe = auth.onAuthStateChanged(userAuth => {\n            unsubscribe();\n            resolve(userAuth);\n        }, reject)\n    });\n}\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}