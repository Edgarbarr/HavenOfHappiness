{"ast":null,"code":"import{createSelector}from'reselect';var selectCart=function selectCart(state){return state.cart;};export var selectCartItems=createSelector([selectCart],function(cart){return cart.cartItems;});export var selectCartItemsCount=createSelector([selectCartItems],function(cartItems){return cartItems.reduce(function(accumulatedQuantity,cartItem){return accumulatedQuantity+cartItem.quantity;},0);});export var selectCartHidden=createSelector([selectCart],function(cart){return cart.hidden;});export var selectCartTotal=createSelector([selectCartItems],function(cartItems){return cartItems.reduce(function(accumulatedPrice,cartItem){return accumulatedPrice+cartItem.price*cartItem.quantity;},0).toFixed(2);});","map":{"version":3,"sources":["/Users/edgarbarrientos/ecommerce/ecommerce/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartHidden","hidden","selectCartTotal","accumulatedPrice","price","toFixed"],"mappings":"AAAA,OAASA,cAAT,KAA+B,UAA/B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAV,EAAxB,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,CAEzC,SAACE,IAAD,QAAUA,CAAAA,IAAI,CAACE,SAAf,EAFyC,CAAtC,CAKP,MAAO,IAAMC,CAAAA,oBAAoB,CAAGN,cAAc,CAC9C,CAACI,eAAD,CAD8C,CAE9C,SAAAC,SAAS,QAAIA,CAAAA,SAAS,CAACE,MAAV,CAAiB,SAACC,mBAAD,CAAsBC,QAAtB,QAAmCD,CAAAA,mBAAmB,CAAGC,QAAQ,CAACC,QAAlE,EAAjB,CAA6F,CAA7F,CAAJ,EAFqC,CAA3C,CAKP,MAAO,IAAMC,CAAAA,gBAAgB,CAAGX,cAAc,CAC1C,CAACC,UAAD,CAD0C,CAE1C,SAACE,IAAD,QAAUA,CAAAA,IAAI,CAACS,MAAf,EAF0C,CAAvC,CAKP,MAAO,IAAMC,CAAAA,eAAe,CAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,CAEzC,SAACC,SAAD,QAAeA,CAAAA,SAAS,CAACE,MAAV,CAAiB,SAACO,gBAAD,CAAmBL,QAAnB,QAA8BK,CAAAA,gBAAgB,CAAGL,QAAQ,CAACM,KAAT,CAAiBN,QAAQ,CAACC,QAA3E,EAAjB,CAAsG,CAAtG,EAAyGM,OAAzG,CAAiH,CAAjH,CAAf,EAFyC,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCart],\n    (cart) => cart.cartItems\n)\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0)\n)\n\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    (cart) => cart.hidden\n)\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    (cartItems) => cartItems.reduce((accumulatedPrice, cartItem)=>accumulatedPrice + cartItem.price * cartItem.quantity, 0).toFixed(2)\n)"]},"metadata":{},"sourceType":"module"}