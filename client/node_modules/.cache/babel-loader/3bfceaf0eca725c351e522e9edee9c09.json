{"ast":null,"code":"var _jsxFileName = \"/Users/edgarbarrientos/ecommerce/ecommerce/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from \"react\";\nimport \"./shop.styles.scss\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collection.component\";\nimport ItemPage from \"../itempage/itempage.component\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\nconst ItemPageWithSpinner = WithSpinner(ItemPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: /*#__PURE__*/React.createElement(CollectionsOverviewContainer, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 24\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId/:itemId`,\n      render: props => /*#__PURE__*/React.createElement(ItemPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/edgarbarrientos/ecommerce/ecommerce/src/pages/shop/shop.component.jsx"],"names":["React","Component","CollectionsOverviewContainer","Route","Switch","CollectionPage","ItemPage","connect","fetchCollectionsStartAsync","createStructuredSelector","selectIsCollectionsLoaded","CollectionsOverviewWithSpinner","WithSpinner","CollectionsOverview","CollectionPageWithSpinner","ItemPageWithSpinner","ShopPage","componentDidMount","props","render","match","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,yBAAT,QAA0C,iCAA1C;AACA,MAAMC,8BAA8B,GAAGC,WAAW,CAACC,mBAAD,CAAlD;AACA,MAAMC,yBAAyB,GAAGF,WAAW,CAACP,cAAD,CAA7C;AACA,MAAMU,mBAAmB,GAAGH,WAAW,CAACN,QAAD,CAAvC;;AAEA,MAAMU,QAAN,SAAuBf,SAAvB,CAAiC;AAC/BgB,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAET,MAAAA;AAAF,QAAiC,KAAKU,KAA5C;AACAV,IAAAA,0BAA0B;AAC3B;;AACDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAiC,KAAKH,KAA5C;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFtB;AAGE,MAAA,SAAS,eAAE,oBAAC,4BAAD;AACT,QAAA,SAAS,EAAE,CAACD;AADH,SAELH,KAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBAFtB;AAGE,MAAA,MAAM,EAAGJ,KAAD,iBACN,oBAAC,yBAAD;AACE,QAAA,SAAS,EAAE,CAACG;AADd,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAmBE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,wBADtB;AAEE,MAAA,MAAM,EAAGJ,KAAD,iBACN,oBAAC,mBAAD;AACE,QAAA,SAAS,EAAE,CAACG;AADd,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,CADF,CADF;AAiCD;;AAxC8B;;AA0CjC,MAAMK,eAAe,GAAGd,wBAAwB,CAAC;AAC/CY,EAAAA,mBAAmB,EAAEX;AAD0B,CAAD,CAAhD;;AAIA,MAAMc,kBAAkB,GAAIC,QAAD,KAAe;AACxCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADF,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CR,QAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./shop.styles.scss\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collection.component\";\nimport ItemPage from \"../itempage/itempage.component\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\nconst ItemPageWithSpinner = WithSpinner(ItemPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  }\n  render() {\n    const { match, isCollectionsLoaded } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Switch>\n          <Route\n            exact\n            path={`${match.path}`}\n            component={<CollectionsOverviewContainer\n              isLoading={!isCollectionsLoaded}\n              {...props}\n            />}\n          />\n          <Route\n            exact\n            path={`${match.path}/:collectionId`}\n            render={(props) => (\n              <CollectionPageWithSpinner\n                isLoading={!isCollectionsLoaded}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path={`${match.path}/:collectionId/:itemId`}\n            render={(props) => (\n              <ItemPageWithSpinner\n                isLoading={!isCollectionsLoaded}\n                {...props}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}