{"ast":null,"code":"import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    put(emailSignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/Users/edgarbarrientos/ecommerce/ecommerce/src/redux/user/users.sagas.js"],"names":["takeLatest","all","call","put","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","googleProvider","auth","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,GAA/B,QAAyC,oBAAzC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,mBAAR,EAA6BC,mBAA7B,EAAkDC,kBAAlD,EAAsEC,kBAAtE,QAA+F,gBAA/F;AACA,SAAQC,cAAR,EAAwBC,IAAxB,EAA8BC,yBAA9B,QAA8D,+BAA9D;AACA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMH,IAAI,CAACI,eAAL,CAAqBL,cAArB,CAArB;AACA,UAAMM,OAAO,GAAG,MAAMb,IAAI,CAACS,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACE,mBAAmB,CAAC;AAACa,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAApB,CAAT;AAEH,GAND,CAME,OAAMC,KAAN,EAAa;AACX,UAAMjB,GAAG,CAACG,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACH;AACJ;AACD,OAAO,UAAUC,mBAAV,GAA+B;AAClC,QAAMrB,UAAU,CAACI,eAAe,CAACkB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACH;AACD,OAAO,UAAUW,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAuD;AAC1D,MAAI;AACA,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMH,IAAI,CAACiB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMX,OAAO,GAAG,MAAMb,IAAI,CAACS,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACI,kBAAkB,CAAC;AAACW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAAnB,CAAT;AACH,GALD,CAKE,OAAMC,KAAN,EAAa;AACXjB,IAAAA,GAAG,CAACK,kBAAkB,CAACY,KAAD,CAAnB,CAAH;AACH;AACJ;AACD,OAAO,UAAUQ,kBAAV,GAA+B;AAClC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCN,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUO,SAAV,GAAqB;AACxB,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAACmB,mBAAD,CAAL,EAA4BnB,IAAI,CAACmB,mBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest, all, call, put} from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport {googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure} from './user.actions';\nimport {googleProvider, auth, createUserProfileDocument} from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n    try{\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(googleSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n        \n    } catch(error) {\n        yield put(googleSignInFailure(error));\n    }\n}\nexport function* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\nexport function* signInWithEmail({payload: {email, password}}){\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(emailSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n    } catch(error) {\n        put(emailSignInFailure(error))\n    }\n}\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail )\n}\n\nexport function* userSagas(){\n    yield all([call(onGoogleSignInStart), call(onGoogleSignInStart)])\n}\n\n\n"]},"metadata":{},"sourceType":"module"}